[versions]
kotlinVersion = "1.6.10"

# android
lifecycleViewModelVersion = "2.3.1"
glideVersion = "4.12.0"
androidAppCompatVersion = "1.3.0"

# jvm
openApiGeneratorVersion = "5.2.0"
guavaVersion = "30.1-jre"

# kotlinx
kotlinxSerializationVersion = "1.3.2"
coroutinesVersion = "1.6.0-native-mt"

# moko
mokoResourcesVersion = "0.18.0"
mokoMvvmVersion = "0.12.0"
mokoErrorsVersion = "0.6.0"
mokoTestVersion = "0.6.1"
mokoNetworkVersion = "0.17.0"

# tests
espressoCoreVersion = "3.2.0"
testRunnerVersion = "1.2.0"
testExtJunitVersion = "1.1.1"
androidxTestVersion = "1.3.0"
robolectricVersion = "4.6.1"

# other
ktorClientVersion = "1.6.7"
kbignumVersion = "2.4.12"
multidexVersion = "2.0.1"
okioVersion = "3.2.0"

[libraries]
# android
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
lifecycleViewModel =  { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewModelVersion" }
multidex = { module = "androidx.multidex:multidex", version.ref = "multidexVersion" }

# kotlinx
kotlinSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }

# ktor
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientVersion" }
ktorClient = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientVersion" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientVersion" }
ktorClientMock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClientVersion" }
ktorClientIos =  { module = "io.ktor:ktor-client-ios", version.ref = "ktorClientVersion" }

# korlibs
kbignum =  { module = "com.soywiz.korlibs.kbignum:kbignum", version.ref = "kbignumVersion" }

# moko
mokoMvvmDataBinding =  { module = "dev.icerock.moko:mvvm-databinding", version.ref = "mokoMvvmVersion" }
mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResourcesVersion" }
mokoMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveData = { module = "dev.icerock.moko:mvvm-livedata", version.ref = "mokoMvvmVersion" }
mokoErrors =  { module = "dev.icerock.moko:errors", version.ref = "mokoErrorsVersion" }
mokoNetwork = { module = "dev.icerock.moko:network", version.ref = "mokoNetworkVersion" }
mokoNetworkErrors = { module = "dev.icerock.moko:network-errors", version.ref = "mokoNetworkVersion" }
mokoNetworkBignum = { module = "dev.icerock.moko:network-bignum", version.ref = "mokoNetworkVersion" }

# tests
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
testCore = { module = "androidx.test:core", version.ref = "androidxTestVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRunnerVersion" }
testExtJunit = { module = "androidx.test.ext:junit", version.ref = "testExtJunitVersion" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlinVersion" }
kotlinTestAnnotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlinVersion" }
mokoTest =  { module = "dev.icerock.moko:test-core", version.ref = "mokoTestVersion" }

# jvm
openApiGenerator = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "openApiGeneratorVersion" }
guava = { module = "com.google.guava:guava", version.ref = "guavaVersion" }

# gradle plugins
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
kotlinSerializationGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinVersion" }
androidGradlePlugin = { module = "com.android.tools.build:gradle", version = "7.0.4" }
mokoResourcesGradlePlugin = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResourcesVersion" }
mokoGradlePlugin = { module = "dev.icerock.moko:moko-gradle-plugin", version = "0.1.0" }


# other
okio = { module = "com.squareup.okio:okio", version.ref = "okioVersion" }